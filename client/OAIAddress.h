/**
 * LocationIQ
 * LocationIQ provides flexible enterprise-grade location based solutions. We work with developers, startups and enterprises worldwide serving billions of requests everyday. This page provides an overview of the technical aspects of our API and will help you get started.
 *
 * The version of the OpenAPI document: 1.1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAddress.h
 *
 * 
 */

#ifndef OAIAddress_H
#define OAIAddress_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIAddress : public OAIObject {
public:
    OAIAddress();
    OAIAddress(QString json);
    ~OAIAddress() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getHouseNumber() const;
    void setHouseNumber(const QString &house_number);

    QString getRoad() const;
    void setRoad(const QString &road);

    QString getResidential() const;
    void setResidential(const QString &residential);

    QString getBorough() const;
    void setBorough(const QString &borough);

    QString getNeighbourhood() const;
    void setNeighbourhood(const QString &neighbourhood);

    QString getQuarter() const;
    void setQuarter(const QString &quarter);

    QString getHamlet() const;
    void setHamlet(const QString &hamlet);

    QString getSuburb() const;
    void setSuburb(const QString &suburb);

    QString getIsland() const;
    void setIsland(const QString &island);

    QString getVillage() const;
    void setVillage(const QString &village);

    QString getTown() const;
    void setTown(const QString &town);

    QString getCity() const;
    void setCity(const QString &city);

    QString getCityDistrict() const;
    void setCityDistrict(const QString &city_district);

    QString getCounty() const;
    void setCounty(const QString &county);

    QString getState() const;
    void setState(const QString &state);

    QString getStateDistrict() const;
    void setStateDistrict(const QString &state_district);

    QString getPostcode() const;
    void setPostcode(const QString &postcode);

    QString getCountry() const;
    void setCountry(const QString &country);

    QString getCountryCode() const;
    void setCountryCode(const QString &country_code);

    QString getStateCode() const;
    void setStateCode(const QString &state_code);

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString house_number;
    bool m_house_number_isSet;
    bool m_house_number_isValid;

    QString road;
    bool m_road_isSet;
    bool m_road_isValid;

    QString residential;
    bool m_residential_isSet;
    bool m_residential_isValid;

    QString borough;
    bool m_borough_isSet;
    bool m_borough_isValid;

    QString neighbourhood;
    bool m_neighbourhood_isSet;
    bool m_neighbourhood_isValid;

    QString quarter;
    bool m_quarter_isSet;
    bool m_quarter_isValid;

    QString hamlet;
    bool m_hamlet_isSet;
    bool m_hamlet_isValid;

    QString suburb;
    bool m_suburb_isSet;
    bool m_suburb_isValid;

    QString island;
    bool m_island_isSet;
    bool m_island_isValid;

    QString village;
    bool m_village_isSet;
    bool m_village_isValid;

    QString town;
    bool m_town_isSet;
    bool m_town_isValid;

    QString city;
    bool m_city_isSet;
    bool m_city_isValid;

    QString city_district;
    bool m_city_district_isSet;
    bool m_city_district_isValid;

    QString county;
    bool m_county_isSet;
    bool m_county_isValid;

    QString state;
    bool m_state_isSet;
    bool m_state_isValid;

    QString state_district;
    bool m_state_district_isSet;
    bool m_state_district_isValid;

    QString postcode;
    bool m_postcode_isSet;
    bool m_postcode_isValid;

    QString country;
    bool m_country_isSet;
    bool m_country_isValid;

    QString country_code;
    bool m_country_code_isSet;
    bool m_country_code_isValid;

    QString state_code;
    bool m_state_code_isSet;
    bool m_state_code_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAddress)

#endif // OAIAddress_H
