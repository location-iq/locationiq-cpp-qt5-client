/**
 * LocationIQ
 * LocationIQ provides flexible enterprise-grade location based solutions. We work with developers, startups and enterprises worldwide serving billions of requests everyday. This page provides an overview of the technical aspects of our API and will help you get started.
 *
 * The version of the OpenAPI document: 1.1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDaybalance.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDaybalance::OAIDaybalance(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDaybalance::OAIDaybalance() {
    this->initializeModel();
}

OAIDaybalance::~OAIDaybalance() {}

void OAIDaybalance::initializeModel() {

    m_day_isSet = false;
    m_day_isValid = false;

    m_bonus_isSet = false;
    m_bonus_isValid = false;
}

void OAIDaybalance::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDaybalance::fromJsonObject(QJsonObject json) {

    m_day_isValid = ::OpenAPI::fromJsonValue(day, json[QString("day")]);
    m_day_isSet = !json[QString("day")].isNull() && m_day_isValid;

    m_bonus_isValid = ::OpenAPI::fromJsonValue(bonus, json[QString("bonus")]);
    m_bonus_isSet = !json[QString("bonus")].isNull() && m_bonus_isValid;
}

QString OAIDaybalance::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDaybalance::asJsonObject() const {
    QJsonObject obj;
    if (m_day_isSet) {
        obj.insert(QString("day"), ::OpenAPI::toJsonValue(day));
    }
    if (m_bonus_isSet) {
        obj.insert(QString("bonus"), ::OpenAPI::toJsonValue(bonus));
    }
    return obj;
}

qint32 OAIDaybalance::getDay() const {
    return day;
}
void OAIDaybalance::setDay(const qint32 &day) {
    this->day = day;
    this->m_day_isSet = true;
}

qint32 OAIDaybalance::getBonus() const {
    return bonus;
}
void OAIDaybalance::setBonus(const qint32 &bonus) {
    this->bonus = bonus;
    this->m_bonus_isSet = true;
}

bool OAIDaybalance::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_day_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_bonus_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDaybalance::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
