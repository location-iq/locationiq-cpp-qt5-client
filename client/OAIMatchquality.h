/**
 * LocationIQ
 * LocationIQ provides flexible enterprise-grade location based solutions. We work with developers, startups and enterprises worldwide serving billions of requests everyday. This page provides an overview of the technical aspects of our API and will help you get started.
 *
 * The version of the OpenAPI document: 1.1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIMatchquality.h
 *
 * 
 */

#ifndef OAIMatchquality_H
#define OAIMatchquality_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIMatchquality : public OAIObject {
public:
    OAIMatchquality();
    OAIMatchquality(QString json);
    ~OAIMatchquality() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getMatchcode() const;
    void setMatchcode(const QString &matchcode);

    QString getMatchtype() const;
    void setMatchtype(const QString &matchtype);

    QString getMatchlevel() const;
    void setMatchlevel(const QString &matchlevel);

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString matchcode;
    bool m_matchcode_isSet;
    bool m_matchcode_isValid;

    QString matchtype;
    bool m_matchtype_isSet;
    bool m_matchtype_isValid;

    QString matchlevel;
    bool m_matchlevel_isSet;
    bool m_matchlevel_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIMatchquality)

#endif // OAIMatchquality_H
