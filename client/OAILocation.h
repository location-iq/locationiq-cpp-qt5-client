/**
 * LocationIQ
 * LocationIQ provides flexible enterprise-grade location based solutions. We work with developers, startups and enterprises worldwide serving billions of requests everyday. This page provides an overview of the technical aspects of our API and will help you get started.
 *
 * The version of the OpenAPI document: 1.1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAILocation.h
 *
 * 
 */

#ifndef OAILocation_H
#define OAILocation_H

#include <QJsonObject>

#include "OAIAddress.h"
#include "OAIMatchquality.h"
#include "OAINamedetails.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAILocation : public OAIObject {
public:
    OAILocation();
    OAILocation(QString json);
    ~OAILocation() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    double getDistance() const;
    void setDistance(const double &distance);

    QString getPlaceId() const;
    void setPlaceId(const QString &place_id);

    QString getLicence() const;
    void setLicence(const QString &licence);

    QString getOsmType() const;
    void setOsmType(const QString &osm_type);

    QString getOsmId() const;
    void setOsmId(const QString &osm_id);

    QList<QString> getBoundingbox() const;
    void setBoundingbox(const QList<QString> &boundingbox);

    QString getLat() const;
    void setLat(const QString &lat);

    QString getLon() const;
    void setLon(const QString &lon);

    QString getDisplayName() const;
    void setDisplayName(const QString &display_name);

    QString getClass() const;
    void setClass(const QString &_class);

    QString getType() const;
    void setType(const QString &type);

    double getImportance() const;
    void setImportance(const double &importance);

    OAIAddress getAddress() const;
    void setAddress(const OAIAddress &address);

    OAINamedetails getNamedetails() const;
    void setNamedetails(const OAINamedetails &namedetails);

    OAIMatchquality getMatchquality() const;
    void setMatchquality(const OAIMatchquality &matchquality);

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    double distance;
    bool m_distance_isSet;
    bool m_distance_isValid;

    QString place_id;
    bool m_place_id_isSet;
    bool m_place_id_isValid;

    QString licence;
    bool m_licence_isSet;
    bool m_licence_isValid;

    QString osm_type;
    bool m_osm_type_isSet;
    bool m_osm_type_isValid;

    QString osm_id;
    bool m_osm_id_isSet;
    bool m_osm_id_isValid;

    QList<QString> boundingbox;
    bool m_boundingbox_isSet;
    bool m_boundingbox_isValid;

    QString lat;
    bool m_lat_isSet;
    bool m_lat_isValid;

    QString lon;
    bool m_lon_isSet;
    bool m_lon_isValid;

    QString display_name;
    bool m_display_name_isSet;
    bool m_display_name_isValid;

    QString _class;
    bool m__class_isSet;
    bool m__class_isValid;

    QString type;
    bool m_type_isSet;
    bool m_type_isValid;

    double importance;
    bool m_importance_isSet;
    bool m_importance_isValid;

    OAIAddress address;
    bool m_address_isSet;
    bool m_address_isValid;

    OAINamedetails namedetails;
    bool m_namedetails_isSet;
    bool m_namedetails_isValid;

    OAIMatchquality matchquality;
    bool m_matchquality_isSet;
    bool m_matchquality_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAILocation)

#endif // OAILocation_H
